name: Build Dell NFS DKMS Driver (.deb) for Latest Kernels

on:
  workflow_dispatch:

jobs:
  build-dkms:
    runs-on: ubuntu-24.04

    steps:
    - name: üì• Checkout Repository
      uses: actions/checkout@v4

    - name: üß∞ Install Build Tools
      run: |
        sudo apt update
        sudo apt install -y build-essential dkms debhelper unzip jq

    - name: üìÇ Unzip Dell Driver Source
      run: |
        unzip dell-nfs-client-driver-ext-BR_MAIN.zip -d dellnfs
        chmod +x dellnfs/dell-nfs-client-driver-ext-BR_MAIN/build-deb.sh

    - name: üß† Get Last 5 Generic Kernel Versions (Latest First)
      id: get-kernels
      run: |
        kernels=$(apt-cache search linux-headers | \
          grep -Eo 'linux-headers-[0-9]+\.[0-9]+\.[0-9]+-[0-9]+-generic' | \
          grep -vE 'lowlatency|azure|gcp|aws' | \
          sort -V | uniq | tail -n 5 | tac)

        echo "KERNEL_LIST<<EOF" >> $GITHUB_ENV
        echo "$kernels" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: üèóÔ∏è Build .deb for Each Kernel
      run: |
        mkdir -p dell-debs
        cd dellnfs/dell-nfs-client-driver-ext-BR_MAIN

        echo "$KERNEL_LIST" | while read -r line; do
          KERNEL="${line#linux-headers-}"
          echo "‚û°Ô∏è Building for $KERNEL"

          sudo apt-get install -y "linux-headers-${KERNEL}" || continue

          # Optional: Override kernel version in build-deb.sh
          sed -i "s/^KERNEL_VERSION=.*/KERNEL_VERSION=$KERNEL/" build-deb.sh || true

          ./build-deb.sh dkms || continue

          DEB=$(find ./dist -name '*.deb' | head -n1)
          if [ -f "$DEB" ]; then
            cp "$DEB" "../../../dell-debs/multipathnfs-kernel-${KERNEL}.deb"
          else
            echo "‚ö†Ô∏è No .deb created for $KERNEL"
          fi
        done

    - name: üì§ Upload All Built DEBs
      uses: actions/upload-artifact@v4
      with:
        name: dell-nfs-dkms-debs
        path: dell-debs/
